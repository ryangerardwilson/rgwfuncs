import os
import subprocess
import shutil
import sys
import inspect
import importlib
from pathlib import Path

def create_init_file():
    init_file = Path('./src/rgwfuncs/__init__.py')
    init_file.parent.mkdir(parents=True, exist_ok=True)

    init_file_content = "# This file is automatically generated\n"
    init_file_content += "# Dynamically importing functions from modules\n\n"

    src_path = Path('./src')
    rgwfuncs_path = src_path / 'rgwfuncs'

    # Ensure rgwfuncs module can be imported
    sys.path.insert(0, str(src_path))

    for module_file in rgwfuncs_path.glob('*.py'):
        module_name = module_file.stem
        if module_name != "__init__":
            mod = importlib.import_module(f'rgwfuncs.{module_name}')
            functions = [name for name, obj in inspect.getmembers(mod, inspect.isfunction)
                         if obj.__module__ == f'rgwfuncs.{module_name}']

            if functions:
                functions_list = ', '.join(functions)
                init_file_content += f"from .{module_name} import {functions_list}\n"

    with init_file.open('w') as f:
        f.write(init_file_content)
    
    print("Generated __init__.py with content:")
    print(init_file_content)


def rebuild_package():
    # Install required build tools
    subprocess.run(['python3', '-m', 'pip', 'install', '--upgrade', 'build'], check=True)
    
    # Remove old distribution folders
    dist_dir = Path('dist')
    if dist_dir.exists():
        shutil.rmtree(dist_dir)
    
    # Build the package
    subprocess.run(['python3', '-m', 'build'], check=True)


def uninstall_local_library():
    # Read package name from pyproject.toml
    name_line = [line for line in Path('pyproject.toml').read_text().splitlines() if line.startswith('name = ')]
    if not name_line:
        raise RuntimeError("Package name not found in pyproject.toml")
    
    package_name = name_line[0].split('=')[1].strip().strip('"')
    
    # Uninstall the local library
    subprocess.run(['pip3', 'uninstall', '-y', package_name], check=True)


def install_local_version():
    # Install package from current directory
    subprocess.run(['pip3', 'install', '.'], check=True)


if __name__ == "__main__":
    print("Creating __init__.py...")
    create_init_file()

    print("Rebuilding package...")
    rebuild_package()

    print("Uninstalling local library...")
    uninstall_local_library()

    print("Installing local version...")
    install_local_version()

    print("The local version of the package has been reinstalled.")

