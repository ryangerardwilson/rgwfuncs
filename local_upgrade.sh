#!/bin/bash

create_init_file() {
    local init_file="./src/rgwfuncs/__init__.py"
    echo "# This file is automatically generated" > "$init_file"
    echo "# Dynamically importing functions from modules" >> "$init_file"
    echo "" >> "$init_file"

    # Set the PYTHONPATH to include the src directory
    export PYTHONPATH=./src

    for module in ./src/rgwfuncs/*.py; do
        module_name=$(basename "$module" .py)
        if [ "$module_name" != "__init__" ]; then
            function_names=$(python3 -c "
import inspect
import rgwfuncs.${module_name} as mod

functions = [name for name, obj in inspect.getmembers(mod, inspect.isfunction) if obj.__module__ == 'rgwfuncs.${module_name}']
print(', '.join(functions))
" 2>/dev/null)
            if [ -n "$function_names" ]; then
                echo "from .${module_name} import ${function_names}" >> "$init_file"
            fi
        fi
    done

    echo "Generated __init__.py with content:"
    cat "$init_file"
}

rebuild_package() {
    python3 -m pip install --upgrade build
    rm -rf dist/*
    python3 -m build
}

uninstall_local_library() {
    local package_name=$(grep -E '^name\s*=\s*".*"' pyproject.toml | sed -E 's/name\s*=\s*"(.*)"/\1/')
    pip3 uninstall -y "$package_name"
}

install_local_version() {
    pip3 install .
}

echo "Creating __init__.py..."
create_init_file

echo "Rebuilding package..."
rebuild_package

echo "Uninstalling local library..."
uninstall_local_library

echo "Installing local version..."
install_local_version

echo "The local version of the package has been reinstalled."

